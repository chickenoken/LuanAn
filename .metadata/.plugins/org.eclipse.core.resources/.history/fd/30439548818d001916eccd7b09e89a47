/**
 * Copyright(c) SystemEXE corp. All Rights Reserved.
 */
/**
 *
 * @version $Revision: $ $Date: $
 */

'use strict';

exexSMSApp.factory('SampleModel', function(BaseModel, $rootScope) {
    // モデルのベースをBaseModelとする。
    var model = BaseModel.getInstance();

    // サーバーと連携する画面項目の定義
    model.form = {
        companyName : '',
        userName : '',
        businessType : '',
        mailAddress: '',
        password: ''
    };

    model.listBusiness = [{code: '0054',codeName: "物流"},
                          {code: '0055',codeName: "製造"},
                          {code: '0056',codeName: "不動産"}];

    model.hidden = {
        guidelines : 'EXEX販売管理システム_簡単操作ガイド.pdf',
        operationDescription : '画面基本説明.zip',
        notice : '',
        isSubmited: false,
        isLogin: false
    };

    /*
     * 画面項目を初期化する。
     */
    model.setup = function(model) {
        // メッセージクラスを取得し、sessionStorageに保管する。
        Messages.setMessage(model != undefined ? model.msgList : '');
    };

    /*
     * Modelをsubmitする処理
     */
    model.submit = function(action, callback) {
        // バリデートに成功した場合のみsubmitする
        if (this.validate()) {
            this.submitModel(action, this.form, function(data) {
                callback(data);
            });
            return;
        }
    };
    return model;
});

exexSMSApp.controller('SampleController',
        ['$scope', '$rootScope', 'SampleModel', 'LoginService', 'DialogsService','RouteService', 'Messages',
        function($scope, $rootScope, SampleModel, LoginService, DialogsService, RouteService, Messages) {

    $scope.init = function(model) {
        // Model(画面項目)の初期化
        $scope.model = SampleModel;
        $scope.model.setup(model);
        sessionStorage.removeItem("loginSubAccount");
        sessionStorage.removeItem('companyInfo');
        $scope.getInit();
    };


    $scope.getInit = function() {
        var param = {};
        LoginService
            .initData(param)
            .then(
                function(result) {
                    $scope.model.hidden.notice = result.data.notice;
            });
    };

    $scope.downloadGuidelines = function() {
        var params = {
            ticket : 'PDF'
        };
        Utils.postToUrl("/Login/downloadGuidelines", params);
    };

    $scope.downloadOperationDescription = function() {
        var params = {
            ticket : 'ZIP'
        };
        Utils.postToUrl("/Login/downloadGuidelines", params);
    };


    $scope.onChangeBusinessType = function(type){
        var params = {businessType : type};
        LoginService.onChangeBusinessType(params)
        .then(
            function(result) {
                var warning = result.data.warning;
                if (!ValidateUtil.isValidTextEmpty(warning)) {
                    DialogsService.showWarning(Messages.getMessage('check.error'), warning);
                    return;
                } else {
                    $scope.model.form.mailAddress = result.data.loginInfo.mailAddress;
                    $scope.model.form.password = result.data.loginInfo.password;
                    console.log(result.data.loginInfo);
                }
            }
        );
    }
 // login action
    $scope.submit = function(formInvalid) {
        $scope.model.hidden.isSubmited = true;
        $scope.model.hidden.isLogin = true;
        if (formInvalid) {
            $scope.model.hidden.isLogin = false;
            return;
        }
        var params = {
                companyName :$scope.model.form.companyName,
                userName :$scope.model.form.userName,
                businessType :$scope.model.form.businessType,
                mailAddress :$scope.model.form.mailAddress,
                password :$scope.model.form.password,
        }
        LoginService
            .login(params)
            .then(
                function(result) {
                    if (!ValidateUtil.isValidTextEmpty(result.data.listGroupLogin)) {
                        var param = {
                            listGroupLogin : result.data.listGroupLogin
                        };
                        DialogsService.showDialog('LoginGroupModal','groupSelectedCtrl', param, null)
                        .result.then(function(param) {
                            var loginGroup = {
                                mailAddress : $scope.model.form.mailAddress,
                                password : $scope.model.form.password,
                                groupCd : param
                            };
                            $scope.loginWithGroup(loginGroup);
                        });
                        return;
                    }
                    var error = result.data.failed;
                    var warning = result.data.warning;
                    var companyCd = result.data.companyCd;
                    if (!ValidateUtil.isValidTextEmpty(error)) {
                        DialogsService.showError(Messages.getMessage('system.error'), error);
                        $scope.model.hidden.isLogin = false;
                        return;
                    } else if (!ValidateUtil.isValidTextEmpty(warning)) {
                        warning = warning.replace('&lt;', '<');
                        warning = warning.replace('&gt;', '>');
                        DialogsService.showWarning(Messages.getMessage('check.error'), warning)
                        .result.then(function(param) {
                            $('input[name="mailAddress"]').focus();
                        });
                        $scope.model.hidden.isLogin = false;
                        return;
                    } else if (!ValidateUtil.isValidTextEmpty(companyCd)) {
                        $scope.model.form.dataSourceType = companyCd;
                        return;
                    } else {
                        $scope.model.hidden.isLogin = true;
                        sessionStorage.setItem("userName",result.data.userName);
                        sessionStorage.setItem("session",angular.toJson(result.data.loginSession));
                        if (ValidateUtil.isValidTextEmpty(result.data.loginSession.lastLoginDate)) {
                            if (result.data.loginSession.userCd == '00001') {
                                RouteService.gotoUrl("ExExContract");
                                return;
                            }
                        }
                        RouteService.gotoUrl("PtlTodoList");
                    }
                }
            );
    };

    $scope.loginWithGroup = function(params,formInvalid) {
        $scope.model.hidden.isSubmited = true;
        if (formInvalid) {
            $scope.model.hidden.isSubmited = false;
            return;
        }
        LoginService
            .login(params)
            .then(
                function(result) {
                    var error = result.data.failed;
                    var warning = result.data.warning;
                    var companyCd = result.data.companyCd;
                    if (!ValidateUtil.isValidTextEmpty(error)) {
                        dialogs.error(Messages.getMessage('system.error'),
                                        error,{size : 'sm'});
                    } else if (!ValidateUtil.isValidTextEmpty(warning)) {
                        warning = warning.replace('&lt;', '<');
                        warning = warning.replace('&gt;', '>');
                        dialogs.warn(Messages.getMessage('check.error'),
                                        warning,{size : 'sm'});
                    } else if (!ValidateUtil.isValidTextEmpty(companyCd)) {
                        $scope.model.form.dataSourceType = companyCd;
                    } else {
                        sessionStorage.setItem("userName",result.data.userName);
                        sessionStorage.setItem("session",
                                        angular.toJson(result.data.loginSession));
                        if (ValidateUtil.isValidTextEmpty(result.data.loginSession.lastLoginDate)) {
                            if (result.loginSession.userCd == '00001') {
                                $window.location = 'ExExContract';
                                return;
                            }
                        }
                        RouteService.gotoUrl("PtlTodoList");
                    }
                }
            );
    };

    // redirect to reset password page
    $scope.resetPassword = function() {
        RouteService.gotoUrl("PwdReset");
    };
    $scope.exExSendMail = function() {
        RouteService.gotoUrl("ExExSendMail");
    };
}]);

exexSMSApp.controller('groupSelectedCtrl', function($scope, $uibModalInstance, data, LoginModel) {

    $scope.modelLogin = LoginModel;
    $scope.listGroupLogin = data.listGroupLogin;
    $scope.groupCd = '';

    $scope.ok = function() {
        $uibModalInstance.close($scope.groupCdSelect);
    };

    $scope.cancel = function() {
        $scope.modelLogin.hidden.isLogin = false;
        $uibModalInstance.dismiss('cancel');
    };

    $scope.onChangeGroup = function(groupCd) {
        $scope.groupCdSelect = groupCd;
    };
});
