/**
 * Copyright(c) SystemEXE corp. All Rights Reserved.
 */
/**
 * SalEstimateControlService
 *
 * @author Quang-Thien
 *
 * @version $Revision:  $  $Date:  $
 */
'use strict';

exexSMSApp.service('SalEstimateControlService', ['$q', 'ServerService', 'Messages',function ($q, ServerService, Messages) {
    var _self = this;

    _self.initData = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/getInit', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.getTaxRate = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalDetailsControl/getTaxRate', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.checkWorkFlow = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalCommon/checkWorkFlow', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.insert = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/insert', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.update = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/update', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.sdelete = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/delete', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.checkDataForReport = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/checkDataForReport', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.selectCustomerByCustType = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/selectCustomerByCustType', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.checkData = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/checkData', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    /**データを存在する*/
    _self.checkDataExist = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/checkDataExist', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.inquiry = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/inquiry', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.onChangeCustomer = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalEstimateControl/onChangeCustomer', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };

    _self.loadSalCommonData = function(param) {
        var deferred = $q.defer();

        ServerService
            .doPost('SalCommon/loadSalCommonData', param)
            .then(
                    function(okResult) {
                        deferred.resolve(okResult);
                    },
                    function(errResult){
                        deferred.reject(errResult);
                    });

        return deferred.promise;
    };


    _self.doDownload = function(param) {
        return ServerService.doDownload('/SalEstimateControl/downloadSalEstimate',  param, 'application/pdf'
                , Messages.getMessage('PDF.ESTIMATE') + param.estimateSno+".pdf");
    };

    _self.doDownloadGroup = function(param) {
        return ServerService.doDownload('/SalEstimateList/downloadGroupSalEstimate',  param, 'application/pdf', "ESTIMATE03_PDF.pdf");
    };
}]);