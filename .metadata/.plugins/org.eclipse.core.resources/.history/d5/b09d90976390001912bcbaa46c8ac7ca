package org.planning.net.controller;

import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URLConnection;
import java.nio.charset.Charset;
import java.nio.file.AccessDeniedException;

import javax.servlet.http.HttpServletResponse;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.util.FileCopyUtils;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

@Controller
public class QuanLyNhanVienController {

    private static final String VIEW_NAME = "quanLyNhanVien";

    private static final String EXCEL_FOLDER="excel/DanhSachNhanVien.xlsx";

    @RequestMapping(
            value = { "/quanLyNhanVien" },
            method = RequestMethod.GET,
            consumes = "application/json")
    public String getPage(Model model) throws AccessDeniedException {
        return VIEW_NAME;
    }

    @RequestMapping(value="/quanLyNhanVien/downloadExcel",
                    method = RequestMethod.GET)
    public void downloadFile(HttpServletResponse response) throws IOException {

        File file = null;
        ClassLoader classloader = Thread.currentThread().getContextClassLoader();
        file = new File(classloader.getResource(EXCEL_FOLDER).getFile());

        FileInputStream inputStream = new FileInputStream(file);

        XSSFWorkbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.getSheetAt(0);
        Row row0 = sheet.getRow(0);
        Cell cell0 = row0.getCell(0);
        cell0.setCellValue("test");
        inputStream.close();
        FileOutputStream out = new FileOutputStream(file);
        workbook.write(out);
        out.close();


        FileCopyUtils.copy(inputStream, response.getOutputStream());
    }

}
