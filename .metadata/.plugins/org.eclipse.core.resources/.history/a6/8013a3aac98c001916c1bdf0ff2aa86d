/**
 * Copyright(c) SystemEXE corp. All Rights Reserved.
 */
/**
 *
 * @version $Revision:  $  $Date:  $
 * @author : huy-du
 */
'use strict';
/**
 * Table :
 */
exexSMSApp.factory('siteItemModel', [ 'BaseModel', function(BaseModel) {
    var model = BaseModel.getInstance();
    model.form = {
        item:{
            groupNo: '',
            groupLabelName: '',
            initDisplayFlag: '',
            groupControlDisplayFlag: '',
            displayPosition: '',
            groupFreeItemFlag: '',
            lineNo: '',
            controlLabelName: '',
            controlType: '',
            listDataSource: '',
            listDisplayFlag: '',
            controlDisplayFlag: '',
            detailFreeItemFlag: '',
            listSiteItemDetail:[]
        },
        position: '',
        listMstCode:[],
        listA050002: [],
        listA050003: []
    };
    model.listColorPopover = ColorUtils.getListColor();
    model.listDetail= [],
    model.hidden = {
        isSubmited: false,
        index: '',
        addDetail: false
    };

return model;

}]);
exexSMSApp.controller('siteItemCtrl',
        ['$scope','siteItemModel', 'MstSiteItemSettingModel', 'DialogsService', 'Messages', '$uibModalInstance', 'data', 'ServerService',
         function($scope, siteItemModel, MstSiteItemSettingModel, DialogsService, Messages, $uibModalInstance, data, ServerService){

    $scope.model = siteItemModel;
    $scope.modelParent = MstSiteItemSettingModel;

    $scope.convertListDetailView = function(list){
        angular.forEach(list, function(detail, i){
            detail.controlLabelName = detail.controlLabelName ? detail.controlLabelName.split("#") : [detail.controlLabelName];
            detail.locale = detail.locale ? detail.locale.split("#") : ['ja', 'vi'];
        });
        return list;
    };

    $scope.init = function(){
        var sessionLogin = angular.fromJson(sessionStorage.getItem("session"));
        $scope.model.hidden.locale = sessionLogin.locale;
        $scope.model.hidden.isSubmited = false;
        $scope.model.form.position = data.position;
        var param = {
            groupNo: data.item ? data.item.groupNo : "",
            groupFreeItemFlag: data.item ? data.item.groupFreeItemFlag : ""
        }
        ServerService.doPost('MstSiteItemSetting/loadData', param).then(
            function(okResult) {
                var error = okResult.data.failed;
                var warning =  okResult.data.warning;
                if(!ValidateUtil.isValidTextEmpty(error)){
                    dialogs.error(Messages.getMessage('system.error'), error);
                    return;
                }else if(!ValidateUtil.isValidTextEmpty(warning)){
                    dialogs.warn(Messages.getMessage('check.error'), warning);
                    return;
                }
                $scope.model.form.listMstCode = okResult.data.listMstCode;
                $scope.model.form.listA050002 = okResult.data.listA050002;
                $scope.model.form.listA050003 = okResult.data.listA050003;
                $scope.model.form.listS020020 = okResult.data.listS020020;
                $scope.model.form.listM010001 = okResult.data.listM010001;

                if(data.item){
                    $scope.model.hidden.index = data.index;
                    $scope.model.form.item = angular.copy(data.item);
                    $scope.model.form.item.listSiteItemDetail = $scope.convertListDetailView(okResult.data.listSiteItemDetail);
                }else{
                    $scope.model.hidden.index = '';
                    $scope.model.form.item = {
                        groupNo: '',
                        locale:['ja', 'vi'],
                        groupLabelName: ['', ''],
                        initDisplayFlag: true,
                        groupControlDisplayFlag: true,
                        displayPosition: data.position,
                        groupFreeItemFlag: true,
                        lineNo: '',
                        controlLabelName: '',
                        controlType: '',
                        listDataSource: '',
                        listDisplayFlag: false,
                        controlDisplayFlag: true,
                        detailFreeItemFlag: true,
                        listSiteItemDetail:[]
                    };
                }
                if($scope.model.form.item.groupKey != "03"
                    && $scope.model.form.item.groupKey != "04"
                        && $scope.model.form.item.groupKey != "05"
                            && $scope.model.form.item.listSiteItemDetail.length == 0){
                    $scope.addDetail();
                }
            }
        )
    }

    $scope.removeItem = function(index){
        $scope.model.form.item.listSiteItemDetail.splice(index, 1);
    }

    $scope.loadInitJsEvent = function(row, index, event){
        //Save color
        var currColor = row.backgroundColor;
        if(!StringUtils.isEmpty(event)){
            currColor = $(event.target).css('color');
        }
        row.backgroundColor = currColor;
        //Add color effect to button
        $('#eventColor').css({"background-color": currColor, "border-color": currColor});
        $('.popover').remove();
        angular.element('body').click();
    };

    /***/
    $scope.addDetail = function(formInvalid){
        if(formInvalid && $scope.model.hidden.addDetail){
            $scope.model.hidden.isSubmited = true;
            return;
        }else{
            $scope.model.hidden.addDetail = false;
            $scope.model.hidden.isSubmited = false;
        }
        var item = {
            groupNo: '',
            locale:['ja', 'vi'],
            groupLabelName: '',
            initDisplayFlag: true,
            groupControlDisplayFlag: true,
            displayPosition: data.position,
            groupFreeItemFlag: true,
            lineNo: '',
            controlLabelName: ['', ''],
            controlType: '',
            listDataSource: '',
            listDisplayFlag: false,
            controlDisplayFlag: true,
            detailFreeItemFlag: true,
            isActive: true,
            autoConvertInputType : '01'
        }
        $scope.model.form.item.listSiteItemDetail.push(item);
        $scope.calWidth();
        $scope.model.hidden.addDetail = true;
    }

    /**グループを登録*/
    $scope.insertGroup = function(formInvalid){
        $scope.model.hidden.isSubmited = true;
        for (var i = 0; i < $scope.model.form.item.listSiteItemDetail.length; i++) {
            var detail = $scope.model.form.item.listSiteItemDetail[i];
            if(!StringUtils.isEmpty(detail.minLength) && !StringUtils.isEmpty(detail.maxLength)) {
                detail.minLength = parseInt(detail.minLength);
                detail.maxLength = parseInt(detail.maxLength);
                if(detail.minLength > detail.maxLength) {
                    return DialogsService.showWarning(Messages.getMessage('check.error'), Messages.getMessage('W00679'));
                }
            }
        }
        if(formInvalid){
            return;
        }
        var params = angular.copy($scope.model.form.item);
        ServerService.doPost('MstSiteItemSetting/hasDataListDisplayFlag', {}).then(
            function(okResult) {
                if(okResult.data.hasDataListDisplayFlag){
                    DialogsService.showConfirm(Messages.getMessage('title.confirm'), Messages.getMessage('S00004'))
                    .result.then(function(btn){
                        sessionStorage.setItem("mstSiteItemInsert", JSON.stringify($scope.model.form.item));
                        var listUpdate = [];
                        delete params.isOpen;
                        delete params.opened;
                        params.locale = params.locale.join("#");
                        if(!StringUtils.isEmpty(params.groupLabelName[0]) && StringUtils.isEmpty(params.groupLabelName[1])){
                            params.groupLabelName[1] = params.groupLabelName[0];
                        }
                        if(!StringUtils.isEmpty(params.groupLabelName[1]) && StringUtils.isEmpty(params.groupLabelName[0])){
                            params.groupLabelName[0] = params.groupLabelName[1];
                        }
                        params.groupLabelName = params.groupLabelName.join("#");
                        angular.forEach(params.listSiteItemDetail, function(detail, j){
                            if(!StringUtils.isEmpty(detail.controlLabelName[0]) && StringUtils.isEmpty(detail.controlLabelName[1])){
                                detail.controlLabelName[1] = detail.controlLabelName[0];
                            }
                            if(StringUtils.isEmpty(detail.controlLabelName[0]) && !StringUtils.isEmpty(detail.controlLabelName[1])){
                                detail.controlLabelName[0] = detail.controlLabelName[1];
                            }
                            detail.controlLabelName = detail.controlLabelName.join("#");
                            detail.locale = detail.locale.join("#");
                        });
                        listUpdate.push(params);
                        var param = {
                                listSiteItemDetail: listUpdate
                        }
                        ServerService.doPost('MstSiteItemSetting/update', param).then(
                            function(okResult) {
                                var error = okResult.data.failed;
                                var warning =  okResult.data.warning;
                                var success =  okResult.data.success;
                                if(!ValidateUtil.isValidTextEmpty(error)){
                                    DialogsService.showError(Messages.getMessage('system.error'), error);
                                    return;
                                }else if(!ValidateUtil.isValidTextEmpty(warning)){
                                    DialogsService.showWarning(Messages.getMessage('check.error'), warning);
                                    return;
                                }else if(!ValidateUtil.isValidTextEmpty(success)){
                                    DialogsService.showNotify(Messages.getMessage('title.info'), success)
                                    $uibModalInstance.close();
                                }
                             }
                         );
                    });
                } else {
                    return DialogsService.showWarning(Messages.getMessage('check.error'), Messages.getMessage('W00340', angular.element('#titleLabel').text()));
                }
            }
        )
    }

    /**
     * calculate width for table
     */
    $scope.calWidth = function(){
        setTimeout(function(){
            $('#tableBody').animate({scrollTop:$('.rpt-list-popup').height()}, 'slow');
            var isChrome = !!window.chrome && !!window.chrome.webstore;
            if(!isChrome){
                $scope.model.hidden.widthHeader = {"width": "calc(100% - 102px)"};
                return;
            }else if (isChrome){
                $scope.model.hidden.widthHeader = {"width": "calc(100% - 95px)"};
                return;
            }
        },100);

    }

    $scope.removeItem = function(index){
        $scope.model.form.item.listSiteItemDetail.splice(index, 1);
    }

    $scope.sortableConfig = {
        handle:'.handle',
    };

    $scope.changeControlType = function(index){
        $scope.model.form.item.listSiteItemDetail[index].checkUnique = false;
        if($scope.model.form.item.listSiteItemDetail[index].controlType != '04'
            && $scope.model.form.item.listSiteItemDetail[index].controlType != '08'
                && $scope.model.form.item.listSiteItemDetail[index].controlType != '10'
                    && $scope.model.form.item.listSiteItemDetail[index].controlType != '11'){
            $scope.model.form.item.listSiteItemDetail[index].listDataSource = '';
        }
    }

    $scope.init();
    $scope.close = function() {
        sessionStorage.removeItem("mstSiteItemInsert");
        $uibModalInstance.dismiss('close');
    };

}]);